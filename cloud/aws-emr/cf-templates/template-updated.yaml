---
AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation Template to spin up Variant Spark on EMR clusters V3 (Version 5 of EMR only)
Parameters:
  clusterName:
    Description: Name of the cluster
    Type: String
  taskInstanceCount:
    Description: Number of task instances
    Type: String
  emrVersion:
    Description: Version of EMR
    Type: String
    Default: "emr-5.8.0"
    AllowedPattern: emr-5.[0-9].[0-9]
    ConstraintDescription: 'Must be EMR Version 5 (i.e: emr-5.3.0)'
  masterInstanceType:
    Description: Instance type of Master Node
    Type: String
    Default: "m4.large"
  coreInstanceType:
    Description: Instance type of Core Node
    Type: String
    Default: "m4.large"
  taskInstanceType:
    Description: Instance type of Task Node
    Type: String
    Default: "m4.large"
  environmentType:
    Description: What environment do you want the cluster to be in
    Type: String
    Default: "live"
  s3BucketBasePath:
    Description: Bucket to log EMR actions to
    Type: String
  taskBidPrice:
    Description: Bid price for Task nodes
    Type: String
  terminationProtected:
    Description: Is the cluster to have termination protection enabled
    Type: String
    AllowedValues:
    - 'true'
    - 'false'
    ConstraintDescription: Boolean
  awsRegion:
    Description: awsRegion
    Default: ap-southeast-2
    AllowedValues:
    - ap-southeast-2
    Type: String
Conditions:
  isLive:
    Fn::Equals:
    - Ref: environmentType
    - live
Resources:
  EMRClusterV5:
    Type: AWS::EMR::Cluster
    Properties:
      Instances:
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType:
            Ref: masterInstanceType
          Market: ON_DEMAND
          Name: Master instance group - 1
        CoreInstanceGroup:
          InstanceCount: 1
          InstanceType:
            Ref: coreInstanceType
          Market: ON_DEMAND
          Name: Core instance group - 2
        TerminationProtected:
          Ref: terminationProtected
      BootstrapActions:
      - Name: Install VariantSpark
        ScriptBootstrapAction:
          Args:
            - "--release-url"
            - "s3://csiro-tb/home/bay041/ImportantData/old_emr_setup/vs"
          Path: "s3://variant-spark/stable/0.2/0.2.0/bootstrap/install-variant-spark.sh"
      - Name: Install Hail
        ScriptBootstrapAction:
          Args:
            - "--release-url"
            - "s3://csiro-tb/home/bay041/ImportantData/old_emr_setup/hail"
          Path: "s3://variant-spark/stable/0.2/0.2.0/bootstrap/install-hail.sh"
      Configurations:
      - Classification: emrfs-site
        ConfigurationProperties:
          fs.s3.maxConnections: 500
      - Classification: spark
        ConfigurationProperties:
          maximizeResourceAllocation: 'true'
      - Classification: spark-defaults
        ConfigurationProperties:
          spark.hadoop.io.compression.codecs: 'org.apache.hadoop.io.compress.DefaultCodec,is.hail.io.compress.BGzipCodec,org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.BZip2Codec'
          spark.executor.extraClassPath: '/etc/hadoop/conf:/usr/lib/hadoop/*:/usr/lib/hadoop-hdfs/*:/usr/lib/hadoop-yarn/*:/usr/lib/hadoop-lzo/lib/*:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/mnt/hail/hail-all-spark_2.0.2_2.11.jar'
          spark.locality.wait: '10s'
          spark.driver.extraClassPath: '/etc/hadoop/conf:/usr/lib/hadoop/*:/usr/lib/hadoop-hdfs/*:/usr/lib/hadoop-yarn/*:/usr/lib/hadoop-lzo/lib/*:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/mnt/hail/hail-all-spark_2.0.2_2.11.jar'
          spark.serializer: 'org.apache.spark.serializer.KryoSerializer'
          spark.dynamicAllocation.enabled: 'false'
      Applications:
      - Name: Ganglia
      - Name: Spark
      Name:
        Ref: clusterName
      JobFlowRole: "EMR_EC2_DefaultRole"
      ServiceRole: "EMR_DefaultRole"
      ReleaseLabel:
        Ref: emrVersion
      LogUri:
        Ref: s3BucketBasePath
      VisibleToAllUsers: false
      Steps:
      - Name: "VariantSpark Job"
        ActionOnFailure: "CANCEL_AND_WAIT"
        HadoopJarStep: 
          Args:
          - "spark-submit"
          - "--deploy-mode"
          - "client"
          - "--class"
          - "au.csiro.variantspark.cli.VariantSparkApp"
          - "/mnt/variant-spark/variant-spark_2.11-all.jar"
          - "importance"
          - "-ff"
          - "s3://csiro-tb/share/Hipster2/Hipster.csv"
          - "-fc"
          - "Hipster"
          - "-if"
          - "s3://csiro-tb/share/Hipster2/VCF/Small.558938.vcf.bz2"
          - "-of"
          - "s3://csiro-tb/share/Hipster2/test-maciej1.out"
          - "-rn"
          - "100"
          - "-rbs"
          - "100"
          - "-on"
          - "10000"
          - "-rmtf"
          - "0.1"
          Jar: "command-runner.jar"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - emr-instance-
            - Ref: AWS::StackName
            - ''
      - Key: Environment
        Value:
          Ref: environmentType
      - Key: Stack ID
        Value:
          Ref: AWS::StackName
  EMRTaskNodes:
    Type: AWS::EMR::InstanceGroupConfig
    Properties:
      InstanceCount:
        Ref: taskInstanceCount
      InstanceType:
        Ref: taskInstanceType
      BidPrice:
        Ref: taskBidPrice
      Market: SPOT
      InstanceRole: TASK
      Name: Task instance group - 3
      JobFlowId:
        Ref: EMRClusterV5
Outputs:
  ClusterID:
    Description: "EMR Cluster ID"
    Value: !Ref EMRClusterV5